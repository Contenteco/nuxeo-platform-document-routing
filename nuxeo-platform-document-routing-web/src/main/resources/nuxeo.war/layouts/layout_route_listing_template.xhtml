<f:subview xmlns:c="http://java.sun.com/jstl/core"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:nxl="http://nuxeo.org/nxforms/layout"
	xmlns:nxu="http://nuxeo.org/nxweb/util"
	xmlns:nxd="http://nuxeo.org/nxweb/document" id="#{layout.id}">

	<c:if test="false">
  Layout template applying to an item instance of SelectDataModel named "documents"

  Other needed parameters are:
  - provider: instance of a ResultProvider to handle sort
  - layoutListingStatus: iteration status, used to print table header
    matching widget label.
    
  This is a copy/paste from the original layout_listing_template.xhmtl
  It allows to add columns to show the structure of a route.
  </c:if>

	<c:if
		test="#{showListingHeader and layout.properties.showListingHeader}">

    <div class="lockFile_block" id='lock_unlock_button'>
      <c:if test="#{!empty currentDocumentLockDetails}">
        <h:outputText value="#{messages['label.summary.locked.intro']} "/>
        <h:outputText class="summary_locked" value="#{messages['label.summary.locked']}"/>
        <c:if test="#{currentDocumentCanBeUnlocked}">
          <h:outputText value=" | " />
          <h:commandLink value="#{messages['command.unlock']}"
            action="#{routingActions.unlockCurrentRoute}"/>
        </c:if>
        <div class="lockDetail">
          <h:outputText value="#{messages['label.summary.by']} #{currentDocumentLockDetails['document.locker']}, "/>
          <h:outputText value="#{messages['label.summary.the']} #{currentDocumentLockDetails['document.lock.time']}"/>
        </div>
      </c:if>
  
      <c:if test="#{empty currentDocumentLockDetails}">
        <h:outputText value="#{messages['label.summary.locked.intro']} "/>
        <h:outputText class="summary_unlocked" value="#{messages['label.summary.unlocked']} "/>
        <c:if test="#{currentDocumentCanBeLocked}" >
          <h:outputText value=" | " />
          <h:commandLink value="#{messages['command.lock']}"
            action="#{routingActions.lockCurrentRoute}"/>
        </c:if>
      </c:if>
    </div>

		<thead>
			<tr>
				<nxl:layoutColumn>
					<c:choose>
						<c:when test="#{layoutColumnIndex == 0}">
							<th colspan="#{value.data.getRouteMaxDepth()}"></th>
						</c:when>
						<c:otherwise>
							<th><c:choose>
								<c:when test="#{layoutColumn.properties.isListingSelectionBox}">
									<h:selectBooleanCheckbox
										id="#{layoutColumn.widgets[0].name}_header"
										onclick="selectDataTablePageForDocument('#{documents.name}', '#{provider.name}', this.checked, '#{listName}', '#{currentDocument.ref}')"
										title="#{messages['tooltip.content.select.all']}" />
								</c:when>
								<c:when
									test="#{layoutColumn.properties.isListingSelectionBoxWithCurrentDocument}">
									<h:selectBooleanCheckbox
										id="#{layoutColumn.widgets[0].name}_header"
										onclick="selectDataTablePage('#{documents.name}', '#{provider.name}', this.checked, '#{listName}')"
										title="#{messages['tooltip.content.select.all']}" />
								</c:when>
								<c:when
									test="#{layoutColumn.properties.useFirstWidgetLabelAsColumnHeader}">
									<c:choose>
										<c:when
											test="#{provider.sortable and !empty layoutColumn.properties.sortPropertyName}">
											<h:commandLink immediate="true"
												action="#{sortActions.repeatSearch}"
												id="#{layoutColumn.widgets[0].name}_header_sort">
												<f:param name="providerName" value="#{provider.name}" />
												<f:param name="sortColumn"
													value="#{layoutColumn.properties.sortPropertyName}" />
												<c:if
													test="#{!empty layoutColumn.properties.defaultSortAscending}">
													<f:param name="defaultSortAscending"
														value="#{layoutColumn.properties.defaultSortAscending}" />
												</c:if>
												<h:outputText value="#{layoutColumn.widgets[0].label}"
													rendered="#{!layoutColumn.widgets[0].translated}" />
												<h:outputText
													value="#{messages[layoutColumn.widgets[0].label]}"
													rendered="#{layoutColumn.widgets[0].translated}" />
												<c:if
													test="#{provider.sortInfo.sortColumn == layoutColumn.properties.sortPropertyName}">
													<h:graphicImage value="/icons/arrow_down.gif"
														rendered="#{provider.sortInfo.sortAscending}" />
													<h:graphicImage value="/icons/arrow_up.gif"
														rendered="#{!provider.sortInfo.sortAscending}" />
												</c:if>
											</h:commandLink>
										</c:when>
										<c:otherwise>
											<h:outputText value="#{layoutColumn.widgets[0].label}"
												rendered="#{!layoutColumn.widgets[0].translated}" />
											<h:outputText
												value="#{messages[layoutColumn.widgets[0].label]}"
												rendered="#{layoutColumn.widgets[0].translated}" />
										</c:otherwise>
									</c:choose>
								</c:when>
							</c:choose></th>
						</c:otherwise>
					</c:choose>
				</nxl:layoutColumn>
			</tr>
		</thead>
	</c:if>

	<c:set var="trStyleClass"
		value="#{nxu:test(layoutListingStatus.index%2 ==0, 'dataRowEven', 'dataRowOdd')}" />
	<tr
		class="#{nxu:test(layout.properties.showRowEvenOddClass, trStyleClass, '')}">
		<nxl:layoutColumn>
			<c:choose>
				<c:when test="#{layoutColumnIndex == 0}">
					<c:forEach var="folder"
						items="#{value.data.getFirstChildFolders()}">
						<td rowspan="#{folder.getTotalChildCount()}">
              <nxl:layoutColumnWidget>
  							<nxl:widget widget="#{widget}" value="#{value}" />
  							<c:if
  								test="#{layoutColumn.size > 1 and layoutColumn.size > widgetIndex + 1 and widgetIndex > 0}">
  								<br />
  							</c:if>
  						</nxl:layoutColumnWidget>
            </td>
					</c:forEach>
					<c:if
						test="#{(value.data.getRouteMaxDepth() - value.data.getDepth()) > 0}">
						<td colspan="#{value.data.getRouteMaxDepth() - value.data.getDepth()}" />
					</c:if>
				</c:when>
				<c:otherwise>
					<td class="#{layoutColumn.properties.columnStyleClass}"><nxl:layoutColumnWidget>
						<nxl:widget widget="#{widget}" value="#{value}" />
						<c:if
							test="#{layoutColumn.size > 1 and layoutColumn.size > widgetIndex + 1 and widgetIndex > 0}">
							<br />
						</c:if>
					</nxl:layoutColumnWidget></td>
				</c:otherwise>
			</c:choose>
		</nxl:layoutColumn>
	</tr>

</f:subview>